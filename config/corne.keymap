/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "tap-preferred";
};

&lt { tapping-term-ms = <400>; };

/ {
    behaviors {
        td_esc_semicolon: td_esc_semicolon {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_ESC_SEMICOLON";
            #binding-cells = <0>;
            bindings = <&kp SEMICOLON>, <&kp ESCAPE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        toggle_layer3 {
            bindings = <&tog 3>;
            key-positions = <7 8 9>;
        };

        momentary_layer3 {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };

        sd_gui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <15 14>;
        };

        sf_ctrl {
            bindings = <&kp LCTRL>;
            key-positions = <16 14>;
        };

        df_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <16 15>;
        };

        sdf_shift_gui {
            bindings = <&kp LS(LEFT_GUI)>;
            key-positions = <14 15 16>;
        };

        kl_gui {
            bindings = <&kp LEFT_GUI>;
            key-positions = <20 21>;
        };

        jl_ctrl {
            bindings = <&kp LCTRL>;
            key-positions = <19 21>;
        };

        jk_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <19 20>;
        };

        jkl_shift_gui {
            bindings = <&kp LS(LEFT_GUI)>;
            key-positions = <19 20 21>;
        };

        mkl_shift_ctrl {
            bindings = <&kp LC(LEFT_SHIFT)>;
            key-positions = <20 21 31>;
        };

        sdv_shift_ctrl {
            bindings = <&kp LC(LEFT_SHIFT)>;
            key-positions = <15 14 28>;
        };

        dfjk_caps_lock {
            bindings = <&kp CAPS>;
            key-positions = <16 15 19 20>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        // Base Layer (0)

        default_layer {
            bindings = <
&none  &kp Q  &kp W  &kp E  &kp R  &kp T    &kp Y      &kp U  &kp I      &kp O    &kp P              &none
&none  &kp A  &kp S  &kp D  &kp F  &kp G    &kp H      &kp J  &kp K      &kp L    &td_esc_semicolon  &none
&none  &kp Z  &kp X  &kp C  &kp V  &kp B    &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH          &none
                     &none  &mo 2  &none    &kp SPACE  &mo 1  &none
            >;
        };

        // Symbols Layer (1)

        symbols {
            bindings = <
&none  &kp EXCL   &kp AT     &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPS   &kp STAR   &kp LPAR        &kp RPAR  &none
&none  &kp LBKT   &kp LBRC   &kp DQT   &kp RBRC    &kp RBKT       &kp PLUS   &kp EQUAL  &kp MINUS  &kp UNDERSCORE  &kp BSPC  &none
&none  &kp TILDE  &kp GRAVE  &kp SQT   &trans      &trans         &trans     &trans     &trans     &kp BSLH        &kp PIPE  &none
                             &none     &trans      &trans         &trans     &trans     &none
            >;
        };

        // Numbers/Nav Layer (2)

        numbers {
            bindings = <
&none  &kp N1           &kp N2  &kp N3      &kp N4       &kp N5          &kp N6    &kp N7    &kp N8  &kp N9     &kp N0   &none
&none  &kp TAB          &trans  &trans      &trans       &kp C_VOL_UP    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans   &none
&none  &kp PRINTSCREEN  &trans  &kp K_COPY  &kp K_PASTE  &kp C_VOL_DN    &none     &none     &none   &none      &kp DEL  &none
                                &none       &trans       &trans          &trans    &trans    &none
            >;
        };

        // Extra Layer (3)

        extra {
            bindings = <
&none  &kp ESC         &kp Q  &kp W      &kp E      &kp R        &trans        &trans        &trans        &trans      &trans  &none
&none  &kp TAB         &kp A  &kp S      &kp D      &kp F        &trans        &trans        &trans        &trans      &trans  &none
&none  &kp LEFT_SHIFT  &kp Z  &kp X      &kp C      &kp V        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR  &trans  &none
                              &kp LCTRL  &kp ENTER  &kp SPACE    &trans        &trans        &none
            >;
        };
    };
};
