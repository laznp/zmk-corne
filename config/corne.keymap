/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <400>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

&lt { tapping-term-ms = <400>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESCAPE>;
        };

        combo_bksp {
            timeout-ms = <50>;
            key-positions = <10 9>;
            bindings = <&kp BACKSPACE>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        combo_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <25 26>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <21 22>;
        };

        combo_rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <33 34>;
        };

        exclm {
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 13>;
        };

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <2 14>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <3 15>;
        };

        dllr {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        percnt {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 19>;
        };

        str {
            bindings = <&kp ASTERISK>;
            key-positions = <8 20>;
        };

        leftparen {
            bindings = <&kp LPAR>;
            key-positions = <9 21>;
        };

        rparen {
            bindings = <&kp RPAR>;
            key-positions = <10 22>;
        };

        layout_switch {
            bindings = <&tog 4>;
            key-positions = <36 37 40 41>;
        };

        system_reset {
            bindings = <&sys_reset>;
            key-positions = <3 4 5>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <15 16 17>;
        };

        system_layer_combo {
            bindings = <&mo 3>;
            key-positions = <36 37>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        // Base Layer (0)
        default_layer {
            bindings = <
    &none   &kp Q   &kp W   &kp E   &kp R   &kp T              &kp Y   &kp U   &kp I   &kp O   &kp P    &none
    &none   &kp A   &kp S   &kp D   &kp F   &kp G              &kp H   &kp J   &kp K   &td_semicolon_esc &none
    &none   &kp Z   &kp X   &kp C   &kp V   &kp B              &kp N   &kp M   &kp COMMA &kp DOT &kp SLASH &none
                                &none   &mo 2   &mt LSFT ENTER     &kp SPACE   &mo 1   &none
            >;
        };

        // Symbols Layer (1)
        symbols {
            bindings = <
    &none &kp EXCL &kp AT   &kp HASH &kp DOLLAR &kp PERCENT     &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR &none
    &none &kp LBKT &kp LS(LBKT) &kp DQT  &kp LS(RBKT)   &kp RBKT        &kp PLUS  &kp EQUAL &kp MINUS &kp UNDERSCORE &kp BSPC &none
    &none &kp TILDE &kp GRAVE &kp SQT &trans &trans             &trans &trans &trans &kp BSLH &kp PIPE &none
                                &none &trans &trans     &trans &trans &none
            >;
        };

        // Numbers/Nav Layer (2)
        numbers {
            bindings = <
    &none &kp N1 &kp N2 &kp N3 &kp N4 &kp N5              &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &none
    &none &kp TAB &trans &trans &trans &kp C_VOL_UP       &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &none
    &none &kp PSCR &trans &kp K_COPY &kp K_PASTE &kp C_VOL_DN   &trans &trans &trans &trans &kp DEL &none
                                &none &trans &trans     &trans &trans &none
            >;
        };

        // Extra Layer (3)
        extra {
            bindings = <
    &none &kp ESC &kp Q &kp W &kp E &kp R         &trans &trans &trans &trans &trans &none
    &none &kp TAB &kp A &kp S &kp D &kp F         &trans &trans &trans &trans &trans &none
    &none &kp LSFT &kp Z &kp X &kp C &kp V        &trans &trans &trans &trans &trans &none
                          &kp LCTL &kp ENTER &kp SPACE   &trans &trans &none
            >;
        };
    };
};
